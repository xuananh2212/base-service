version: "3.8"

services:
  kong-database:
    image: postgres:13-alpine
    container_name: kong-database
    # ports:
    #   - 5832:5432
    environment:
      POSTGRES_USER: ${KONG_DB_USERNAME}
      POSTGRES_DB: ${KONG_DB_NAME}
      POSTGRES_PASSWORD: ${KONG_DB_PASSWORD}
    restart: always
    networks:
      taxnet-net:
        ipv4_address: ${KONG_DATABASE_DNS}
    volumes:
      - "db-data-kong-postgres:/var/lib/postgresql/data"

  kong-migrations:
    image: kong:2.8.1-alpine
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: ${KONG_DATABASE_DNS}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_PG_DATABASE: ${KONG_DB_NAME:-kong}
    command: kong migrations bootstrap
    restart: on-failure
    networks:
      - taxnet-net
    depends_on:
      - kong-database

  kong:
    image: kong:2.8.1-alpine
    container_name: kong
    environment:
      LC_CTYPE: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      KONG_DATABASE: postgres
      KONG_PG_HOST: ${KONG_DATABASE_DNS}
      KONG_PG_DATABASE: ${KONG_DB_NAME:-kong}
      KONG_PG_USER: ${KONG_DB_USERNAME}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_DNS_RESOLVER: ${CONSUL_DNS}:8600
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      # KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    ports:
      - ${KONG_PROXY_PORT}:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    links:
      - kong-database:kong-database
    networks:
      - taxnet-net
    depends_on:
      - kong-migrations
    restart: on-failure:5

  konga:
    image: pantsel/konga
    ports:
      - 1337:1338
    links:
      - kong:kong
    container_name: konga
    environment:
      - NODE_ENV=develop
    restart: always
    depends_on:
      - kong
    networks:
      - taxnet-net

  consul:
    image: hashicorp/consul:1.12.0
    container_name: ${ENV_CONTAINER}-consul
    restart: always
    volumes:
      - ./consul:/etc/consul.d
    command: "agent --config-file  /etc/consul.d/consul.json"
    networks:
      taxnet-net:
        ipv4_address: ${CONSUL_DNS}
    ports:
      - ${CONSUL_ADMIN_PORT}:8500
      - ${CONSUL_DNS_PORT}:8600/tcp
      - ${CONSUL_DNS_PORT}:8600/udp

  # Here we have six Redis containers with Cluster mode enabled,
  # three of them will work as master nodes and each one of
  # will have a replica, so in case of failures, the replica becomes the master.
  # They are configured by the cluster_initiator container.
  redis_cache:
    image: "redis:7.0-alpine"
    container_name: ${ENV_CONTAINER}-redis_cache
    ports:
      - "6379"
    volumes:
      - redis_cache_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: always
    networks:
      taxnet-net:
        ipv4_address: ${REDIS_CACHE_IP}
        
  redis_commander:
    image: rediscommander/redis-commander:latest
    container_name: ${ENV_CONTAINER}-redis_cache_manager
    environment:
      REDIS_HOSTS: "local:redis_cache:6379"
      HTTP_USER: ${REDIS_CACHE_MANAGER_USER}
      HTTP_PASSWORD: ${REDIS_CACHE_MANAGER_PASSWORD}
    ports:
      - "${REDIS_COMMANDER_PORT}:8081"
    depends_on:
      - redis_cache
    networks:
      taxnet-net:
        ipv4_address: ${REDIS_CACHE_MANAGER}

  # Rabbit AMQP
  rabbitmq:
    image: rabbitmq:3.9.10-management-alpine
    container_name: ${ENV_CONTAINER}-rabbitmq
    restart: always
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_MANAGEMENT_PORT}:15672
    networks:
      taxnet-net:
        ipv4_address: ${RABBITMQ_IP}

  nats:
    image: nats:2.9.19-alpine
    container_name: ${ENV_CONTAINER}-nats
    restart: "always"
    ports:
      - 4222:4222
    networks:
      taxnet-net:
        ipv4_address: 192.168.18.206
volumes:
  db-data-kong-postgres:
  redis_cache_data: {}
  # emqx-data: {}
  # emqx-etc: {}
  # emqx-log: {}

networks:
  taxnet-net:
    driver: bridge
    name: ${TAXNET_NET_NAME}
    external: true

    # ipam:
    #   config:
    #     - subnet: ${TAXNET_SUBNET}
    #       gateway: ${TAXNET_GATEWAY}